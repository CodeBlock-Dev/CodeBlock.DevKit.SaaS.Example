@using HeyItIsMe.Application.Dtos.Questions

<EditForm Model="SearchQuestionsInputDto" OnSubmit="HandleSearchQuestions" class="row gy-2 gx-3 align-items-center">

    <div class="col-6 col-sm-3">
        <a class="btn d-block f-sm btn-success" @onclick="@(() => ModalService.Show<CreateQuestion>(AdminPanelLocalizer[AdminPanelResource.CreateQuestion], new ModalOptions { Class="blazored-modal width-xs-90 width-md-50"}))">
            @AdminPanelLocalizer[AdminPanelResource.CreateQuestion]
        </a>
    </div>

    <div class="col-6 col-sm-3">
        <InputText @bind-Value="SearchQuestionsInputDto.Term" placeholder="..." class="form-control f-sm"></InputText>
    </div>


    <div class="col-6 col-sm-3">
        <InputSelect @bind-Value="SearchQuestionsInputDto.SortOrder" class="form-control f-sm form-select">
            @foreach (Enum item in Enum.GetValues(typeof(SortOrder)))
            {
                <option value="@item">@item.GetEnumDisplayName()</option>
            }
        </InputSelect>
    </div>

    <div class="col-6 col-sm-3 d-flex align-items-center">
        <button type="submit" class="btn f-sm btn-primary me-2 w-100">@CoreLocalizer[CoreResource.Search]</button>

        <a class="btn f-sm btn-outline-dark me-2" data-bs-toggle="collapse" href="#more-filters" role="button" aria-expanded="false" aria-controls="more-filters">
            <i class="bi bi-filter"></i>
        </a>
    </div>

</EditForm>

@code {
    protected SearchQuestionsInputDto SearchQuestionsInputDto = new();

    [Parameter]
    public EventCallback<SearchQuestionsInputDto> SearchChangedCallback { get; set; }

    protected virtual async Task HandleSearchQuestions()
    {
        SearchQuestionsInputDto.PageNumber = 1;
        await SearchChangedCallback.InvokeAsync(SearchQuestionsInputDto);
    }
} 