@using HeyItIsMe.Application.Services.Pages
@using HeyItIsMe.Application.Dtos.Pages
@inject IPageService PageService
@inject IJSRuntime JSRuntime

<div class="wizard-step">
    <div class="text-center mb-4">
        <i class="bi bi-person text-primary" style="font-size: 2.5rem;"></i>
        <h3 class="mt-3 mb-3">What's Your Display Name?</h3>
        <p class="text-muted">This is how visitors will see your name on the page</p>
    </div>
    
    <div class="form-group mb-4">
        <label class="form-label fw-bold">Display Name</label>
        <input type="text" class="form-control" @bind="DisplayName" placeholder="Alex Johnson" />
        <div class="form-text">
            <i class="bi bi-info-circle me-1"></i>
            You can use your full name, first name, nickname, or any name you prefer.
        </div>
    </div>
    
    <div class="d-flex justify-content-between">
        <button class="btn btn-outline-secondary" @onclick="OnPrevious">
            <i class="bi bi-arrow-left me-2"></i>Back
        </button>
        <button class="btn btn-primary" @onclick="HandleUpdateDisplayName" disabled="@(string.IsNullOrWhiteSpace(DisplayName) || IsLoading)">
            @if (IsLoading)
            {
                <span class="spinner-border spinner-border-sm me-2"></span>
            }
            else
            {
                <i class="bi bi-check-lg me-2"></i>
            }
            Continue
        </button>
    </div>
</div>

@code {
    [Parameter] public string PageId { get; set; }
    [Parameter] public EventCallback OnPrevious { get; set; }
    [Parameter] public EventCallback OnNext { get; set; }
    
    private string DisplayName = "";
    private bool IsLoading = false;
    
    private async Task HandleUpdateDisplayName()
    {
        if (string.IsNullOrWhiteSpace(DisplayName) || string.IsNullOrWhiteSpace(PageId))
            return;
            
        IsLoading = true;
        try
        {
            var result = await PageService.UpdatePageDisplayName(PageId, new UpdatePageDisplayNameDto { DisplayName = DisplayName });
            if (result.IsSuccess)
            {
                await OnNext.InvokeAsync();
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "Error updating display name: " + string.Join(", ", result.Errors));
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Error: " + ex.Message);
        }
        finally
        {
            IsLoading = false;
        }
    }
}
